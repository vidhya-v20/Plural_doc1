{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red45\green45\blue45;\red255\green255\blue255;\red107\green0\blue1;
\red0\green0\blue0;\red220\green0\blue5;\red0\green0\blue255;\red144\green1\blue18;\red45\green45\blue45;
}
{\*\expandedcolortbl;;\cssrgb\c23137\c23137\c23137;\cssrgb\c100000\c100000\c100000;\cssrgb\c50196\c0\c0;
\cssrgb\c0\c0\c0;\cssrgb\c89804\c0\c0;\cssrgb\c0\c0\c100000;\cssrgb\c63922\c8235\c8235;\cssrgb\c23137\c23137\c23137;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww29740\viewh18040\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Rohini\
\'97\'97\'97\'97\'97\'97\'97\
\
\
\
Index.html\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
<html>\
\
<head>\
    <title>\
        Home Page\
    </title>\
    <meta charset="utf-8">\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <link rel="stylesheet" href="./CSS/style.css">\
\
    <!--nav bar-->\
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />\
    <!--nav bar-->\
\
    <style>\
\
\
        body \{\
            background-image: url('./Images/Stepup_new.png');\
            background-position: center;\
            background-repeat: no-repeat;\
            background-size: cover;\
        \}\
\
        #StepUp \{\
\
            font-family: Georgia, 'Times New Roman', Times, serif;\
            color: rgb(17, 17, 105);\
            font-size: 400%;\
            margin-left: 10%;\
            margin-top: 5%;\
        \}\
\
        #QuickTime \{\
\
            font-family: Georgia, 'Times New Roman', Times, serif;\
            color: rgb(17, 17, 105);\
            font-size: 100%;\
            margin-left: 20%;\
        \}\
\
        #image \{\
            margin-left: 18%;\
            margin-top: 3%;\
        \}\
\
        #image img \{\
            border-radius: 10%;\
            background-color: transparent;\
            height: 200;\
            justify-content: center;\
\
            display: flex;\
\
        \}\
\
        button \{\
\
            outline: none;\
            background: rgb(211, 170, 240);\
            padding: 10px;\
            margin-top: 5%;\
            margin-left: 20%;\
            font-weight: 50px;\
            font-size: medium;\
            border-radius: 30px;\
            padding-left: 20px;\
            padding-left: 0px;\
            font-family: Verdana, Geneva, Tahoma, sans-serif;\
            align-items: center;\
            border: none;\
        \}\
\
        #textSteup \{\
            font-style: italic;\
            /*font-weight: 100;*/\
            font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\
            /*margin-left: 15%;*/\
            padding-left: 10%;\
            margin-top: 5%;\
            max-width: 40.625rem;\
            font-size: 1.25vw;\
\
\
        \}\
\
        @media only screen and (max-width: 600px) \{\
            button \{\
                outline: none;\
                background: rgb(211, 170, 240);\
                padding: 10px;\
                \
                margin-left: 30%;\
                font-weight: 50px;\
                font-size: medium;\
                border-radius: 30px;\
                padding-left: 20px;\
                padding-left: 0px;\
                font-family: Verdana, Geneva, Tahoma, sans-serif;\
                align-items: center;\
                border: none;\
                margin-top: -2%;\
            \}\
\
            #image \{\
                margin-left: 18%;\
                margin-top: 10%;\
            \}\
\
            #textSteup \{\
                font-style: italic;\
                /*font-weight: 100;*/\
                font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\
                /*margin-left: 15%;*/\
                padding: 10%;\
                margin-top: -2%;\
                max-width: 40.625rem;\
                margin-left: 5%;\
                font-size: 3vw;\
\
\
            \}\
        \}\
            /*nav bar */\
            * \{\
    box-sizing: border-box;\
    padding: 0;\
    margin: 0;\
\}\
\
\
body \{\
    font-family: Arial, Helvetica, sans-serif;\
\}\
\
ul \{\
    list-style: none;\
\}\
\
a \{\
    text-decoration: none;\
    color: inherit;\
\}\
header \{\
    /*background: #b178c7;*/\
    background: rgb(115, 70, 210);\
    color: white;\
\
    padding: .5rem 0;\
\}\
\
.nav-container \{\
    display: flex;\
    align-items: center;\
    justify-content: space-between;\
\
    width: 90%;\
    margin: 0 auto;\
\}\
\
\
.nav-container .logo \{\
    font-size: 2rem; \
    font-weight: bold;  \
\}\
\
.nav \{\
    display: flex;\
    flex-grow: 1;\
\}\
\
.nav--ul__one \{\
    margin-left:-3%;\
\}\
\
.nav-container, .nav--ul__one,\
.nav--ul__two \{\
    display: flex;\
    gap: 1.6rem;\
    font-size: 1.2rem;\
\}\
.nav-link\
\{\
    font-size: medium;\
    font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\
   \
\}\
.hamburger-menu \{\
    display: none; /* Hidden by default for larger screens */\
    cursor: pointer;\
\}\
@media (max-width: 400px) \{\
    .nav-container .logo \{\
        font-size: 1.2rem;\
        z-index: 2;\
    \}\
\
    .nav \{\
        flex-direction: column;\
        gap: 2rem;\
    \}\
\
    .nav--ul__one,\
    .nav--ul__two \{\
        flex-direction: column;\
        gap: .6rem;\
    \}\
\
    .hamburger-menu \{\
        display: block;\
        z-index: 2;\
    \}\
\
    .nav \{\
        position: absolute;\
        top: 0;\
        right: -100%;\
        bottom: 0;\
        width: 100%;\
\
        padding-top: 6rem;\
\
        align-items: center;\
        text-align: center;\
        background-color: #4D4DDB;\
        color: white;\
\
        transition: 0.15s ease-in-out;\
    \}\
\
    .nav.active \{\
        right: 0;\
    \}\
\
\}\
                /*nav bar */\
            \
    </style>\
</head>\
\
<body>\
\
    <!--Nav bar-->\
    <header class="header">\
        <div class="nav-container">\
    \
            <nav class="nav">\
                <ul class="nav--ul__one">\
                    <li class="nav-link"><a href="#">Home</a></li>\
                    <li class="nav-link"><a href="#">About Us</a></li>\
                    <li class="nav-link"><a href="new_user.html">New User</a></li>\
                    \
                    <li class="nav-link"><a href="new-todo.html">New Task</a></li>\
                    <li class="nav-link"><a href="user-todos.html">ToDo-list</a></li>\
                    \
                    \
                </ul>\
            </nav>\
            <span class="hamburger-menu  material-symbols-outlined">menu</span>\
        </div>\
</header>\
\
    <!--nav bar-->\
\
    <div>\
        <div>\
            <p id="StepUp">DAILY DIGEST</p>\
            <p id="QuickTime"><i><b>Your Partner to Stay Organised</b></i></p>\
        </div>\
        <div id="image">\
            <img src="./Images/todolist.jpeg">\
\
        </div>\
\
    </div>\
\
    <p id="textSteup">\
\
        Daily Digest makes it frictionless to get all your tasks\
        out of your head and organized in one trusted place.\
\
    </p>\
    </div>\
    </div>\
\
    <div class="row2">\
        <button\
            style="color: rgb(61, 4, 100);text-align: center;font-family: Cambria, Cochin, Georgia, Times, 'Times New Roman', serif;font-size: larger;padding: 1%;">\
            Read More..</button>\
        <div>\
\
<script>\
    const hamburgerMenu = document.querySelector(".hamburger-menu");\
    const nav = document.querySelector(".nav");\
    \
    hamburgerMenu.addEventListener("click", () => \{\
    nav.classList.toggle("active")\
    \
\});\
</script>\
\
</body>\
\
</html>\
\
\
\
New-todo.html\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
\
<HTML>\
\
<HEAD>\
    <title>\
        Add ToDoList\
    </title>\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <link rel="stylesheet" href="./CSS/style.css">\
    <!--nav bar-->\
    <link rel="stylesheet"\
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />\
    <!--nav bar-->\
\
    <style>\
\
        #btnAddnew \{\
            margin-top: 5%;\
            background-color: rgb(207, 171, 241);\
            padding: 3%;\
            height: 6%;\
        \}\
\
        .form \{\
\
            margin: 0 auto;\
\
            width: 470px;\
            justify-content: space-between;\
\
\
        \}\
\
        .form label \{\
\
            /*display: inline-block;*/\
            display: inline-block;\
            width: 200px;\
            text-align: left;\
            justify-content: space-evenly;\
            padding: 1%;\
            margin-left: -10%;\
        \}\
\
        .form input \{\
\
            display: inline-block;\
            justify-content: space-evenly;\
            width: 250px;\
        \}\
\
        @media (max-width: 400px) \{\
            .form \{\
\
                margin: 0 auto;\
\
                width: 210px;\
            \}\
\
            .form label \{\
\
                display: inline-block;\
                text-align: center;\
                margin-left: -30px;\
            \}\
\
            .form input \{\
\
                /*display: inline-block;*/\
                justify-content: space-evenly;\
                width: 150px;\
\
            \}\
        \}\
\
        * \{\
            box-sizing: border-box;\
            padding: 0;\
            margin: 0;\
\
        \}\
\
        body \{\
            background-image: url('./Images/Stepup_new.png');\
            background-position: center;\
            background-repeat: no-repeat;\
            background-size: cover;\
        \}\
\
        ul \{\
            list-style: none;\
        \}\
\
        a \{\
            text-decoration: none;\
            color: inherit;\
        \}\
\
        header \{\
            /*background: #b178c7;*/\
            background: rgb(115, 70, 210);\
            color: white;\
\
            padding: .5rem 0;\
        \}\
\
        .nav-container \{\
            display: flex;\
            align-items: center;\
            justify-content: space-between;\
\
            width: 90%;\
            margin: 0 auto;\
        \}\
\
\
        .nav-container .logo \{\
            font-size: 2rem;\
            font-weight: bold;\
        \}\
\
        .nav \{\
            display: flex;\
            flex-grow: 1;\
        \}\
\
        .nav--ul__one \{\
            margin-left: -3%;\
        \}\
\
        .nav-container,\
        .nav--ul__one,\
        .nav--ul__two \{\
            display: flex;\
            gap: 1.6rem;\
            font-size: 1.2rem;\
        \}\
\
        .nav-link \{\
            font-size: medium;\
            font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\
\
        \}\
\
        .hamburger-menu \{\
            display: none;\
            /* Hidden by default for larger screens */\
            cursor: pointer;\
        \}\
\
        @media (max-width: 400px) \{\
            \
\
            .nav-container .logo \{\
                font-size: 1.2rem;\
                z-index: 2;\
            \}\
\
            .nav \{\
                flex-direction: column;\
                gap: 2rem;\
            \}\
\
            .nav--ul__one,\
            .nav--ul__two \{\
                flex-direction: column;\
                gap: .6rem;\
            \}\
\
            .hamburger-menu \{\
                display: block;\
                z-index: 2;\
            \}\
\
            .nav \{\
                position: absolute;\
                top: 0;\
                right: -100%;\
                bottom: 0;\
                width: 100%;\
\
                padding-top: 6rem;\
\
                align-items: center;\
                text-align: center;\
                background-color: #4D4DDB;\
                color: white;\
\
                transition: 0.15s ease-in-out;\
            \}\
\
            .nav.active \{\
                right: 0;\
            \}\
\
        \}\
\
        /*nav bar */\
        /*form*/\
    </style>\
</HEAD>\
\
<body>\
    \
    <!--Nav bar-->\
    <header class="header">\
        <div class="nav-container">\
\
            <nav class="nav">\
                <ul class="nav--ul__one">\
                    <li class="nav-link"><a href="index.html">Home</a></li>\
                    <li class="nav-link"><a href="#">About Us</a></li>\
                    <li class="nav-link"><a href="new_user.html">New User</a></li>\
\
                    <li class="nav-link"><a href="new-todo.html">New Task</a></li>\
                    <li class="nav-link"><a href="user-todos.html">ToDo-list</a></li>\
\
\
                </ul>\
            </nav>\
            <span class="hamburger-menu  material-symbols-outlined">menu</span>\
        </div>\
    </header>\
\
    <!--nav bar-->\
\
\
\
    <div class="containerNEW">\
\
      \
        <div class="to-do-list">\
\
            <!--Add the dropdown button-->\
            <h3>Add New Task</h3>\
            <br>\
\
            <div class="row">\
                <h4> Select a user: </h4> <br><select id="selectUser"></select>\
                <div>\
\
                </div>\
            </div>\
\
            <div id="Addvalue">\
\
                <div class="blockHead">\
                    <div class="form">\
                        <!--Add category-->\
\
                        <!--\
                        <div class="UserId">\
                            <lable>User id : </lable><input type="text" id="userid">\
                        </div>-->\
                        <br>\
                        <div class="category">\
                            <lable>Category : </lable>\
                            </Category><input type="text" id="category">\
                        </div>\
                        <br>\
                        <div class="description">\
                            <lable>Description : </lable><input type="text" id="description">\
                        </div>\
                        <br>\
                        <div class="deadline">\
                            <lable>Deadline : </lable><input type="text" id="deadline">\
                        </div>\
                    </div>\
                </div>\
                <fieldset class="priority">\
                    <legend style="text-align: center;font-weight: 600;">Priority : </legend>\
\
                    <input type="radio" id="html" name="priority_set" value="low">\
                    <label for="low">Low</label>\
                    <input type="radio" id="css" name="priority_set" value="medium">\
                    <label for="medium">Medium</label>\
                    <input type="radio" id="javascript" name="priority_set" value="high">\
                    <label for="high">High</label>\
\
                </fieldset>\
                <br>\
                <input type="button" id="btnAddnew" value="Add New Task" onclick="AddDetails()">\
                <div id="message"></div>\
            </div>\
\
        </div>\
\
      \
        <script src="./Scripts/addToDo.js" ></script>\
\
        \
</body>\
\
</HTML>\
\
\
\
\
New_user.html\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
<HTML>\
\
<HEAD>\
    <title>\
        Add ToDoList\
    </title>\
    <meta charset="utf-8">\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <link rel="stylesheet" href="./CSS/style.css">\
    <!--nav bar-->\
\
    <link rel="stylesheet"\
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />\
    <!--nav bar-->\
    <!--nav bar-->\
\
    <style>\
        .form \{\
\
            margin: 0 auto;\
\
            width: 470px;\
            justify-content: space-between;\
\
\
        \}\
\
        .form label \{\
\
            /*display: inline-block;*/\
            display: inline-block;\
            width: 200px;\
            text-align: left;\
            justify-content: space-evenly;\
            padding: 2%;\
            margin-left: -10%;\
        \}\
\
        .form input \{\
\
            /*display: inline-block;*/\
            justify-content: space-evenly;\
            width: 250px;\
\
        \}\
\
        @media (max-width: 600px) \{\
            \
            .form \{\
\
                margin: 0 auto;\
\
                width: 210px;\
            \}\
\
            .form label \{\
\
                display: inline-block;\
                text-align: center;\
                margin-left: -30px;\
            \}\
\
            .form input \{\
\
                display: inline-block;\
                justify-content: center;\
                margin-left: -40px;\
                padding-left: 0px;\
                width: 150px\
            \}\
        \}\
\
            /*form*/\
\
\
        #btnAddnewUser \{\
            margin-top: 5%;\
            background-color: rgb(207, 171, 241);\
            padding: 3%;\
            height: 6%;\
        \}\
\
        * \{\
            box-sizing: border-box;\
            padding: 0;\
            margin: 0;\
\
        \}\
\
        body \{\
            background-image: url('./Images/Stepup_new.png');\
            background-position: center;\
            background-repeat: no-repeat;\
            background-size: cover;\
        \}\
\
        ul \{\
            list-style: none;\
        \}\
\
        a \{\
            text-decoration: none;\
            color: inherit;\
        \}\
\
        header \{\
            /*background: #b178c7;*/\
            background: rgb(115, 70, 210);\
            color: white;\
\
            padding: .5rem 0;\
        \}\
\
        .nav-container \{\
            display: flex;\
            align-items: center;\
            justify-content: space-between;\
\
            width: 90%;\
            margin: 0 auto;\
        \}\
\
\
        .nav-container .logo \{\
            font-size: 2rem;\
            font-weight: bold;\
        \}\
\
        .nav \{\
            display: flex;\
            flex-grow: 1;\
        \}\
\
        .nav--ul__one \{\
            margin-left: -3%;\
        \}\
\
        .nav-container,\
        .nav--ul__one,\
        .nav--ul__two \{\
            display: flex;\
            gap: 1.6rem;\
            font-size: 1.2rem;\
        \}\
\
        .nav-link \{\
            font-size: medium;\
            font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\
\
        \}\
\
        .hamburger-menu \{\
            display: none;\
            /* Hidden by default for larger screens */\
            cursor: pointer;\
        \}\
\
        @media (max-width: 400px) \{\
            .nav-container .logo \{\
                font-size: 1.2rem;\
                z-index: 2;\
            \}\
\
            .nav \{\
                flex-direction: column;\
                gap: 2rem;\
            \}\
\
            .nav--ul__one,\
            .nav--ul__two \{\
                flex-direction: column;\
                gap: .6rem;\
            \}\
\
            .hamburger-menu \{\
                /*display: block;*/\
                display: block;\
                z-index: 2;\
            \}\
\
            .nav \{\
                position: absolute;\
                top: 0;\
                right: -100%;\
                bottom: 0;\
                width: 100%;\
\
                padding-top: 6rem;\
\
                align-items: center;\
                text-align: center;\
                background-color: #4D4DDB;\
                color: white;\
\
                transition: 0.15s ease-in-out;\
            \}\
\
            .nav.active \{\
                right: 0;\
            \}\
\
        \}\
\
        /*nav bar */\
    </style>\
</HEAD>\
\
\
<body>\
    <!--Nav bar-->\
    <header class="header">\
        <div class="nav-container">\
\
            <nav class="nav">\
                <ul class="nav--ul__one">\
                    <li class="nav-link"><a href="index.html">Home</a></li>\
                    <li class="nav-link"><a href="#">About Us</a></li>\
                    <li class="nav-link"><a href="new_user.html">New User</a></li>\
\
                    <li class="nav-link"><a href="new-todo.html">New Task</a></li>\
                    <li class="nav-link"><a href="user-todos.html">ToDo-list</a></li>\
\
\
                </ul>\
            </nav>\
            <span class="hamburger-menu  material-symbols-outlined">menu</span>\
        </div>\
    </header>\
\
    <!--nav bar-->\
\
\
\
    <div class="container">\
        <div class="to-do-list">\
            <h3>Add New User  </h3>\
\
\
            <!--Add the dropdown button-->\
            <div class="row">\
                <!--<h4> Select a user: </h4> <br><select id ="selectUser"></select>-->\
                <div>\
\
                </div>\
            </div>\
\
            <div id="Addvalue">\
\
                <div class="blockHead">\
                    <!--Add category-->\
                    <br>\
\
                    <div class="form">\
\
                        <label>Name :</label>\
                        <input type="text" name="name" id="addNewName" required>\
                        <br>\
                        <label>User Name : </label>\
\
                        <input type="text" name="Uname" id="AddNewUserName" required>\
                        <br>\
                        <label>Password :</label>\
\
                        <input type="text" name="Password" id="AddNewUserPassword" required>\
                        <br>\
                        <label>Re-enter Password :</label>\
\
                        <input type="text" name="RetypePass" id="AddNewUserRePassword" required>\
\
                    </div>\
\
                </div>\
                <br>\
\
                <input type="button" id="btnAddnewUser" value="Add New User">\
                <div id ="message"></div>\
            </div>\
\
            <script src="./Scripts/addNewUser.js"></script>\
           \
</body>\
\
</HTML>\
\
\
\
User-todos.html\
\
\
<HTML>\
\
<HEAD>\
    <title>\
        Home Page\
    </title>\
    <meta charset="utf-8">\
    <meta name="viewport" content="width=device-width, initial-scale=1.0">\
    <link rel="stylesheet" href="./CSS/style.css">\
\
    <!--table grid-->\
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">\
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>\
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>\
    <link rel=\'94stylesheet\'94 href=\'94https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\'94/>\
    <!-- Bootstrap Font Icon CSS -->\
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css" />\
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">\
    <!--table grid-->\
\
\
    <!--nav bar-->\
    <link rel="stylesheet"\
        href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0" />\
    <!--nav bar-->\
\
    <style>\
        .table\{\
             visibility: hidden;\
             border-radius: 50%;\
        \}\
        .row \{\
            display: flex;\
            align-items: center;\
            justify-content: center;\
            background: rgb(128, 33, 141);\
            border-radius: 30px;\
            padding-left: 30px;\
            margin-bottom: 25px;\
            margin-left: 10%;\
            max-width: 80%;\
            text-align: left;\
        \}\
\
        #btnDetails \{\
            margin-top: 5%;\
            background-color: rgb(207, 171, 241);\
            padding: 3%;\
            height: 6%;\
            \
        \}\
\
        .containerTable \{\
            width: 75%;\
            background-color: rgb(158, 158, 226);\
            background-position: center;\
            background-repeat: no-repeat;\
            background-size: cover;\
            margin-left: 3%;\
            justify-content: space-evenly;\
            border: 1px;\
            border-color: #4D4DDB;\
            visibility: hidden;\
        \}\
\
        select \{\
            flex: .55;\
            outline: none;\
            background: rgb(237, 143, 143);\
            padding: 10px;\
            margin-left: 0%;\
            margin-right: -9%;\
            font-weight: 50px;\
            font-size: medium;\
            border-radius: 30px;\
            padding-left: 20px;\
\
            font-family: Verdana, Geneva, Tahoma, sans-serif;\
            align-items: left;\
        \}\
\
        #myTable \{\
            text-align: left;\
        \}\
\
\
        body \{\
            background-image: url('./Images/Stepup_new.png');\
            background-position: center;\
            background-repeat: no-repeat;\
            background-size: cover;\
        \}\
\
        #StepUp \{\
\
            font-family: Georgia, 'Times New Roman', Times, serif;\
            color: rgb(17, 17, 105);\
            font-size: 400%;\
            margin-left: 10%;\
            margin-top: 5%;\
        \}\
\
        #QuickTime \{\
\
            font-family: Georgia, 'Times New Roman', Times, serif;\
            color: rgb(17, 17, 105);\
            font-size: 100%;\
            margin-left: 20%;\
        \}\
\
        #image \{\
            margin-left: 18%;\
            margin-top: 3%;\
        \}\
\
        #image img \{\
            border-radius: 10%;\
            background-color: transparent;\
            height: 200;\
            justify-content: center;\
\
            display: flex;\
\
        \}\
\
        #textSteup \{\
            font-style: italic;\
            /*font-weight: 100;*/\
            font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\
            /*margin-left: 15%;*/\
            padding-left: 10%;\
            margin-top: 5%;\
            max-width: 40.625rem;\
            font-size: 1.25vw;\
\
\
        \}\
\
        @media only screen and (max-width: 600px) \{\
\
            #image \{\
                margin-left: 18%;\
                margin-top: 10%;\
            \}\
\
            #textSteup \{\
                font-style: italic;\
                /*font-weight: 100;*/\
                font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\
                /*margin-left: 15%;*/\
                padding: 10%;\
                margin-top: -2%;\
                max-width: 40.625rem;\
                margin-left: 5%;\
                font-size: 3vw;\
\
\
            \}\
        \}\
\
        /*nav bar */\
        * \{\
            box-sizing: border-box;\
            padding: 0;\
            margin: 0;\
        \}\
\
        body \{\
            font-family: Arial, Helvetica, sans-serif;\
        \}\
\
        ul \{\
            list-style: none;\
        \}\
\
        a \{\
            text-decoration: none;\
            color: inherit;\
        \}\
\
        header \{\
            /*background: #b178c7;*/\
            background: rgb(115, 70, 210);\
            color: white;\
\
            padding: .5rem 0;\
        \}\
\
        .nav-container \{\
            display: flex;\
            align-items: center;\
            justify-content: space-between;\
\
            width: 90%;\
            margin: 0 auto;\
        \}\
\
\
        .nav-container .logo \{\
            font-size: 2rem;\
            font-weight: bold;\
        \}\
\
        .nav \{\
            display: flex;\
            flex-grow: 1;\
        \}\
\
        .nav--ul__one \{\
            margin-left: -3%;\
        \}\
\
        .nav-container,\
        .nav--ul__one,\
        .nav--ul__two \{\
            display: flex;\
            gap: 1.6rem;\
            font-size: 1.2rem;\
        \}\
\
        .nav-link \{\
            font-size: medium;\
            font-family: Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif;\
\
        \}\
\
        .hamburger-menu \{\
            display: none;\
            /* Hidden by default for larger screens */\
            cursor: pointer;\
        \}\
\
        @media (max-width: 400px) \{\
            .nav-container .logo \{\
                font-size: 1.2rem;\
                z-index: 2;\
            \}\
\
            .nav \{\
                flex-direction: column;\
                gap: 2rem;\
            \}\
\
            .nav--ul__one,\
            .nav--ul__two \{\
                flex-direction: column;\
                gap: .6rem;\
            \}\
\
            .hamburger-menu \{\
                display: block;\
                z-index: 2;\
            \}\
\
            .nav \{\
                position: absolute;\
                top: 0;\
                right: -100%;\
                bottom: 0;\
                width: 100%;\
\
                padding-top: 6rem;\
\
                align-items: center;\
                text-align: center;\
                background-color: #4D4DDB;\
                color: white;\
\
                transition: 0.15s ease-in-out;\
            \}\
\
            .nav.active \{\
                right: 0;\
            \}\
\
            select \{\
                width: 200%;\
                padding-left: -1%;\
                text-align: left;\
                margin-left: -10%;\
            \}\
\
            .row h4 \{\
                margin-left: -20%;\
                text-align: left;\
            \}\
\
        \}\
\
\
\
        /*table related */\
    </style>\
\
\
\
<body>\
    <!--Nav bar-->\
    <header class="header">\
        <div class="nav-container">\
\
            <nav class="nav">\
                <ul class="nav--ul__one">\
                    <li class="nav-link"><a href="index.html">Home</a></li>\
                    <li class="nav-link"><a href="#">About Us</a></li>\
                    <li class="nav-link"><a href="new_user.html">New User</a></li>\
\
                    <li class="nav-link"><a href="new-todo.html">New Task</a></li>\
                    <li class="nav-link"><a href="user-todos.html">ToDo-list</a></li>\
                </ul>\
            </nav>\
            <span class="hamburger-menu  material-symbols-outlined">menu</span>\
        </div>\
    </header>\
\
    <!--nav bar-->\
\
\
    <div class="containerNEW">\
\
\
        <div class="to-do-list">\
\
            <!--Add the dropdown button-->\
            <h3><b>To do lists</h3></b>\
            <br>\
\
            <div class="row">\
                <h4 style="margin-left: -30%;"> Select a user: </h4> \
                <br>\
            \
                <select id="selectUser" style="margin-right: -30%;"></select>\
                <div>\
\
                </div>\
            </div>\
            <input type="button" id="btnDetails" value="Show Details">\
        </div>\
    </div>\
    <div class="containerTable" id ="containerTable">\
        <div class="table-responsive">\
            <table class="table" id="table">\
                <thead>\
                    <tr>\
                        <th>Description</th>\
                        <th>Deadline</th>\
                        <th>Category</th>\
                        <th>Priority</th>\
                        <th>Status</th>\
                    </tr>\
                </thead>\
\
            </table>\
        </div>\
    </div>\
\
    </table>\
\
    <script src="./Scripts/ToDo.js" >\
\
    </script>\
</body>\
\
</HTML>\
\
\
\
\
\
Server.js\
\'97\'97\'97\'97\'97\
const express = require("express");\
const cors = require("cors");\
const fs = require("fs");\
\
const app = express();\
\
\
///////////////////////////////////////////////////////////////////////\
//   MIDDLEWARE (CONFIGURATIONS) //////////////////////////////////////\
///////////////////////////////////////////////////////////////////////\
\
\
// Permit cross-origin requests\
app.use(cors());\
\
// Support application/x-www-form-urlencoded data\
app.use(express.urlencoded(\{ extended: false \}));\
\
// Support application/json data\
app.use(express.json());\
\
// Serve static front-end files (HTML, etc.) from "./public"\
// app.use(express.static("public"));\
\
\
///////////////////////////////////////////////////////////////////////\
//   API ENDPOINTS ////////////////////////////////////////////////////\
///////////////////////////////////////////////////////////////////////\
\
\
// Get all categories \
app.get("/api/categories", function (request, response) \{\
    console.info("LOG: Got a GET request for all categories");\
\
    const json = fs.readFileSync(__dirname + "/data/categories.json", "utf8");\
    const categories = JSON.parse(json);\
\
    // LOG data for tracing\
    console.info("LOG: Returned categories are ->", categories);\
\
    response\
        .status(200)\
        .json(categories);\
\});\
\
\
// Get all TODOs\
app.get("/api/todos", function (request, response) \{\
    console.info("LOG: Got a GET request for all todos");\
\
    // Read todos.json  \
    const json = fs.readFileSync(__dirname + "/data/todos.json", "utf8");\
    const todos = JSON.parse(json);\
\
    // LOG data for tracing\
    console.info("LOG: Returned todos are ->", todos);\
\
    response\
        .status(200)\
        .json(todos);\
\});\
\
\
// Get one TODO by id\
app.get("/api/todos/:id", function (request, response) \{\
    const requestedId = request.params.id;\
    console.info("LOG: Got a GET request for todo", requestedId);\
\
    const json = fs.readFileSync(__dirname + "/data/todos.json", "utf8");\
    const todos = JSON.parse(json);\
\
    // Find the requested todo\
    const matchingTodo = todos.find((todo) => String(todo.id) === String(requestedId));\
\
    // If todo not found\
    if (!matchingTodo) \{\
        console.warn(`LOG: **NOT FOUND**: todo $\{requestedId\} does not exist!`);\
\
        response\
            .status(404)\
            .end();\
\
        return;\
    \}\
\
    // LOG data for tracing\
    console.info("LOG: Returned todo is ->", matchingTodo);\
\
    response\
        .status(200)\
        .json(matchingTodo);\
\});\
\
\
// Get all TODOs for a given user id\
app.get("/api/todos/byuser/:id", function (request, response) \{\
    const requestedId = request.params.id;\
    console.info("LOG: Got a GET request for todos for userid", requestedId);\
\
    const json = fs.readFileSync(__dirname + "/data/todos.json", "utf8");\
    const todos = JSON.parse(json);\
\
    // Find the requested todos\
    const matchingTodos = todos.filter((todo) => String(todo.userid) === String(requestedId));\
\
    // LOG data for tracing\
    console.info("LOG: Returned todos are ->", matchingTodos);\
\
    response\
        .status(200)\
        .json(matchingTodos);\
\});\
\
\
// Get all users (without passwords)\
app.get("/api/users", function (request, response) \{\
    console.info("LOG: Got a GET request for all users");\
\
    const json = fs.readFileSync(__dirname + "/data/users.json", "utf8");\
    const users = JSON.parse(json);\
\
    // Copy users to an new array -- omitting the passwords\
    const usersWithoutPasswords = [];\
    for (const user of users) \{\
        usersWithoutPasswords.push(\{\
            id: user.id,\
            name: user.name,\
            username: user.username,\
        \});\
    \}\
\
    // LOG data for tracing\
    console.info("LOG: Returned users (without passwords) are ->", usersWithoutPasswords);\
\
    response\
        .status(200)\
        .json(usersWithoutPasswords);\
\});\
\
\
// Find out if a specific username is available\
app.get("/api/username_available/:username", function (request, response) \{\
    const requestedUsername = request.params.username;\
    console.info(`LOG: Checking to see if username $\{requestedUsername\} is available`);\
\
    const json = fs.readFileSync(__dirname + "/data/users.json", "utf8");\
    const users = JSON.parse(json);\
\
    // See if username already exists\
    const matchingByUsername = (user) => user.username.toLowerCase() === requestedUsername.toLowerCase()\
    const availability = \{ available: !users.some(matchingByUsername) \};\
\
    // LOG response for tracing\
    console.info("LOG: Returned message ->", availability);\
\
    response\
        .status(200)\
        .json(availability);\
\});\
\
\
// GET a specific user  \
// NOTE: this endpoint returns the user without the password\
app.get("/api/users/:username", function (request, response) \{\
    const username = request.params.username;\
    console.info("LOG: Got a GET request for user with username " + username);\
\
    const json = fs.readFileSync(__dirname + "/data/users.json", "utf8");\
    const user = JSON.parse(json);\
\
    // Find the user\
    const byUsername = (user) => user.username.toLowerCase() === username.toLowerCase()\
    const matchingUser = user.find(byUsername);\
\
    // If no matching user\
    if (!matchingUser) \{\
        console.warn(`LOG: **NOT FOUND**: user $\{username\} does not exist!`);\
        \
        response\
            .status(404)\
            .end();\
    \
        return;\
    \}\
\
    // Create a copy without the password\
    const userWithoutPassword = \{ \
        id: matchingUser.id, \
        name: matchingUser.name, \
        username: matchingUser.username,\
    \};\
\
    // LOG data for tracing\
    console.info("LOG: Returned user is ->", userWithoutPassword);\
\
    response\
        .status(200)\
        .json(userWithoutPassword);\
\});\
\
\
// POST a new todo\
app.post("/api/todos", function (request, response) \{\
    console.info("LOG: Got a POST request to add a todo");\
    console.info("LOG: Message body ->", JSON.stringify(request.body));\
\
    // If not all TODO data passed, reject the request\
    const \{ userid, category, description, deadline, priority \} = request.body\
    if (!userid || !category || !description || !deadline || !priority) \{\
        console.warn("LOG: **MISSING DATA**: one or more todo properties missing");\
        \
        response\
            .status(400)\
            .json(\{ error: "Missing data, can't process: one or more Todo properties missing." \});\
\
        return;\
    \}\
\
    const todoJson = fs.readFileSync(__dirname + "/data/todos.json", "utf8");\
    const todos = JSON.parse(todoJson);\
\
    // Get the id of this new todo\
    const nextIdJson = fs.readFileSync(__dirname + "/data/next-ids.json", "utf8");\
    const nextIdData = JSON.parse(nextIdJson);\
    \
    // Create the todo w/ new id and completed marked as false\
    const todo = \{\
        id: nextIdData.nextTodoId,\
        userid: userid,\
        category: category,\
        description: description,\
        deadline: deadline,\
        priority: priority,\
        completed: false,\
    \};\
    \
    nextIdData.nextTodoId += 1;\
    fs.writeFileSync(__dirname + "/data/next-ids.json", JSON.stringify(nextIdData));\
\
    todos.push(todo);\
    fs.writeFileSync(__dirname + "/data/todos.json", JSON.stringify(todos));\
\
    // LOG data for tracing\
    console.info("LOG: New todo added is ->", todo);\
\
    response\
        .status(201)\
        .json(todo);\
\});\
\
\
// PUT a todo in order to toggle the "completed" field (false->true initially)\
app.put("/api/todos/:id", function (request, response) \{\
    const requestedId = request.params.id;\
    console.info(`LOG: Got a PUT request to toggle todo $\{requestedId\} as complete`);\
\
    const json = fs.readFileSync(__dirname + "/data/todos.json", "utf8");\
    const todos = JSON.parse(json);\
\
    // Find the requested todo\
    const matchingTodo = todos.find((todo) => String(todo.id) === String(requestedId));\
\
    // If todo not found, we have nothing left to do: respond\
    if (!matchingTodo) \{\
        console.warn("LOG: **ERROR: todo does not exist!");\
        response\
            .status(404)\
            .end();\
\
        return;\
    \}\
\
    // Mark the todo complete if is incomplete, and vice versa\
    // This will correctly mutate the "todos" array, before rewriting file \
    matchingTodo.completed = !matchingTodo.completed;\
    fs.writeFileSync(__dirname + "/data/todos.json", JSON.stringify(todos));\
\
    // LOG data for tracing\
    console.info("LOG: This todo is complete ->", matchingTodo);\
\
    response\
        .status(200)\
        .json(\{\
            id: matchingTodo.id,\
            completed: matchingTodo.completed\
        \});\
\});\
\
\
/*\
// DELETE a todo\
app.delete('/api/todos/:id', function (request, response) \{\
    console.info("LOG: Got a DELETE request for ToDos.  This feature is not implemented.");\
    response\
        .status(200)\
        .end();\
\})\
*/\
\
\
// POST a new user\
app.post("/api/users", function (request, response) \{\
    console.info("LOG: Got a POST request to add a user");\
    console.info("LOG: Message body -------->", JSON.stringify(request.body));\
\
    // If not all user data passed, reject the request\
    if (!request.body.name || !request.body.username || !request.body.password) \{\
        console.warn("LOG: **MISSING DATA**: one or more user properties missing");\
        response\
            .status(400)\
            .json(\{ error: "Missing data, can't process: one or more User properties missing." \});\
\
        return;\
    \}\
\
    const json = fs.readFileSync(__dirname + "/data/users.json", "utf8");\
    const users = JSON.parse(json);\
\
    // Check for duplicate username\
    const byUsername = (user) => user.username.toLowerCase() === request.body.username.toLowerCase()\
    const matchingUser = users.find(byUsername);\
\
    // If username already exists, return 403\
    if (matchingUser !== undefined) \{\
        console.warn("LOG: **ERROR: username already exists!");\
        response\
            .status(403)\
            .json(\{ error: "Forbidden: Username already exists!" \});\
\
        return;\
    \}\
\
    const user = \{\
        id: users.length + 1,\
        name: request.body.name,\
        username: request.body.username,\
        password: request.body.password,\
    \};\
\
    users.push(user);\
    fs.writeFileSync(__dirname + "/data/users.json", JSON.stringify(users));\
\
    // LOG data for tracing\
    console.info("LOG: New user added is ->", user);\
\
    response\
        .status(201)\
        .json(user);\
\});\
\
\
///////////////////////////////////////////////////////////////////////\
// Start the server ///////////////////////////////////////////////////\
///////////////////////////////////////////////////////////////////////\
\
\
const server = app.listen(8083, () => \{\
    const port = server.address().port;\
    console.info("App listening at port", port);\
\});\
\
\
Package.json\
\'97\'97\'97\'97\'97\'97\'97\'97\
\
\
\{\
  "name": "stayorganized_server",\
  "version": "1.0.0",\
  "description": "This is a simple server provided to support the stay orgranized workshop",\
  "main": "server.js",\
  "scripts": \{\
    "test": "echo \\"Error: no test specified\\" && exit 1",\
    "start": "node server.js"\
  \},\
  "author": "",\
  "license": "ISC",\
  "dependencies": \{\
    "cors": "^2.8.5",\
    "express": "^4.18.1"\
  \}\
\}\
\
\
\
\
ToDo original.js\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\
\
\
let dropdownId = document.getElementById("selectUser");\
let tableelement = document.getElementById("table");\
let containerTable = document.getElementById("containerTable");\
let buttondetails = document.getElementById("btnModal");\
\
\
window.onload = function () \{\
\
  initTodoDropdown();\
  myFunction();\
 \
  //get the handle of the button\
  btnDetails = document.getElementById("btnDetails");\
  btnDetails.onclick = DisplayDetails;\
  \
\
\}\
\
function initTodoDropdown() \{\
\
  fetch("http://localhost:8083/api/users/")\
    .then(Response => Response.json())\
    .then(data => \{\
      for (let i = 0; i < data.length; i++) \{\
        //populate the dropdown with valid name\
        let theOption = new Option(data[i].name, data[i].id);\
\
        // append the option as a child of (inside) the select element\
        dropdownId.appendChild(theOption);\
\
\
      \}\
\
    \})\
\}\
\
\
\
function DisplayDetails() \{\
  //get the name from the select box and its id \
  let selectName = dropdownId.value;\
  let tableId = document.getElementById("table")\
\
  var oRows = tableId.getElementsByTagName('tr');\
  var iRowCount = oRows.length;\
  \
  if (iRowCount > 1) \{\
    for (let i = 1; i < iRowCount; i++) \{\
     \
      tableId.deleteRow(1);\
    \}  \
  \}\
\
  //fetch the details of this user\
  fetch("http://localhost:8083/api/todos/byuser/" + selectName)\
    .then(Response => Response.json())\
    .then(data => \{\
     \
      //check if the data has more number of rows and then diplay table\
      if (data.length>1)\{\
        tableelement.style.visibility = "visible";\
        containerTable.style.visibility = "visible";\
      \}\
      \
      \
      //Add a dynamic table\
\
\
      for (let i = 0; i < data.length; i++) \{\
        let row = tableId.insertRow(-1);\
        let cell1 = row.insertCell(0);\
        let cell2 = row.insertCell(1);\
        let cell3 = row.insertCell(2);\
        let cell4 = row.insertCell(3);\
        let cell5 = row.insertCell(4);\
        cell1.innerHTML = data[i].description;\
        cell2.innerHTML = data[i].deadline;\
        cell3.innerHTML = data[i].category;\
\
        if (data[i].priority == 'High')\{\
          \
          cell4.innerHTML = '<i class="bi bi-thermometer-high h4" style = "color:red;"></i>'\
         \
        \}\
         else if (data[i].priority == 'Medium')\{\
          \
          cell4.innerHTML = '<i class="bi bi-thermometer-half h4" style = "color:yellow;"></i>'\
         \
        \}if (data[i].priority == 'Low')\{\
          \
          cell4.innerHTML = '<i class="bi bi-thermometer-low h4" style = "color:green;"></i>'\
         \
        \}\
\
\
        if (data[i].completed == 'true' || data[i].completed == 1)\{\
          \
          cell5.innerHTML = '<i "bi bi-check-circle h4" style = "color:green;"></i>'\
         \
        \}\
        else if (data[i].completed == 'false' || data[i].completed == 0)\
        \{\
        cell5.innerHTML = '<i class="bi bi-x-circle h4" style = "color:red" ></i>'\
        \}\
\
        // Insert a link to details\
        const detailsCell = row.insertCell();\
        let btnDetailsnew = document.createElement('button');\
        btnDetailsnew.className='gfgselect bg-secondary'  ;\
        btnDetailsnew.style.backgroundColor = 'transparent';\
        btnDetailsnew.style.color = 'blue';\
        btnDetailsnew.style.borderColor = 'transparent';\
        btnDetailsnew.id = 'btnModal';\
        btnDetailsnew.innerText = 'Details';  \
        btnDetailsnew.onclick = handleButtonClick;\
        detailsCell.appendChild(btnDetailsnew);\
      \}     \
    \})\
    \
\}\
\
\
\
      function myFunction() \{\
        const hamburgerMenu = document.querySelector(".hamburger-menu");\
        const nav = document.querySelector(".nav");\
      \
        hamburgerMenu.addEventListener("click", () => \{\
          nav.classList.toggle("active")\
        \});\
      \}\
\
\
 function handleButtonClick() \{\
\
 // Accessing row data using the data-* attributes\
  //const deadliname = this.parentNode.parentNode.firstElementChild.innerText;\
  //const deadliname = this.parentNode.parentNode.childNodes.length;\
  \
    var dsc = this.parentNode.parentNode.childNodes[0].innerText;\
    var endl = this.parentNode.parentNode.childNodes[1].innerText;\
    var catgy = this.parentNode.parentNode.childNodes[2].innerText;\
   \
\
  var exampleModal = getExampleModal();\
\
  // Init the modal if it hasn't been already.\
  if (!exampleModal) \{ exampleModal = initExampleModal(); \}\
\
  var html =\
      '<div class="modal-header" style="background-color: black;">' +\
        '<h5 class="modal-title" id="exampleModalLabel" style="color:white;" >Task Details</h5>' +\
        '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +\
          '<span aria-hidden="true">&times;</span>' +\
        '</button>' +\
      '</div>' +\
      '<div class="modal-body" style="background-color:rgb(158, 198, 233);">' +\
      '<ul>'+ '<li> Description: ' + dsc + '</li>' + '</br>' + '<li> Deadline: '+ endl + '</li>' + '</br>' + '<li> Category: '+ catgy + '</li> ' +'</br>' + \
       \
      '</div>' +\
      '<div class="modal-footer" style="background-color:rgb(84, 188, 230);">' +\
        '<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>' +\
      \
      '</div>';\
\
\
  setExampleModalContent(html);\
\
  // Show the modal.\
  jQuery(exampleModal).modal('show');\
\
\}\
\
function getExampleModal() \{\
  return document.getElementById('exampleModal');\
\}\
\
function setExampleModalContent(html) \{\
  getExampleModal().querySelector('.modal-content').innerHTML = html;\
\}\
\
function initExampleModal() \{\
  var modal = document.createElement('div');\
  modal.classList.add('modal', 'fade');\
  modal.setAttribute('id', 'exampleModal');\
  modal.setAttribute('tabindex', '-1');\
  modal.setAttribute('role', 'dialog');\
  modal.setAttribute('aria-labelledby', 'exampleModalLabel');\
  modal.setAttribute('aria-hidden', 'true');\
  modal.innerHTML =\
        '<div class="modal-dialog" role="document">' +\
          '<div class="modal-content"></div>' +\
        '</div>';\
  document.body.appendChild(modal);\
  return modal;\
\}\
        \
    \
\
ToDo.js\
\'97\'97\'97\
let dropdownId = document.getElementById("selectUser");\
let tableelement = document.getElementById("table");\
let containerTable = document.getElementById("containerTable");\
let buttondetails = document.getElementById("btnModal");\
\
\
window.onload = function () \{\
\
  initTodoDropdown();\
  myFunction();\
 \
  //get the handle of the button\
  btnDetails = document.getElementById("btnDetails");\
  btnDetails.onclick = DisplayDetails;\
  \
\
\}\
\
function initTodoDropdown() \{\
\
  fetch("http://localhost:8083/api/users/")\
    .then(Response => Response.json())\
    .then(data => \{\
      for (let i = 0; i < data.length; i++) \{\
        //populate the dropdown with valid name\
        let theOption = new Option(data[i].name, data[i].id);\
\
        // append the option as a child of (inside) the select element\
        dropdownId.appendChild(theOption);\
\
\
      \}\
\
    \})\
\}\
\
\
\
function DisplayDetails() \{\
  //get the name from the select box and its id \
  let selectName = dropdownId.value;\
  let tableId = document.getElementById("table")\
\
  var oRows = tableId.getElementsByTagName('tr');\
  var iRowCount = oRows.length;\
  \
  if (iRowCount > 1) \{\
    for (let i = 1; i < iRowCount; i++) \{\
     \
      tableId.deleteRow(1);\
    \}  \
  \}\
\
  //fetch the details of this user\
  fetch("http://localhost:8083/api/todos/byuser/" + selectName)\
    .then(Response => Response.json())\
    .then(data => \{\
     \
      //check if the data has more number of rows and then diplay table\
      if (data.length>1)\{\
        tableelement.style.visibility = "visible";\
        containerTable.style.visibility = "visible";\
      \}\
      \
      \
      //Add a dynamic table\
\
\
      for (let i = 0; i < data.length; i++) \{\
        let row = tableId.insertRow(-1);\
        let cell1 = row.insertCell(0);\
        let cell2 = row.insertCell(1);\
        let cell3 = row.insertCell(2);\
        let cell4 = row.insertCell(3);\
        let cell5 = row.insertCell(4);\
        cell1.innerHTML = data[i].description;\
        cell2.innerHTML = data[i].deadline;\
        cell3.innerHTML = data[i].category;\
\
        if (data[i].priority == 'High')\{\
          \
          cell4.innerHTML = '<i class="bi bi-thermometer-high h4" style = "color:red;"></i>'\
         \
        \}\
         else if (data[i].priority == 'Medium')\{\
          \
          cell4.innerHTML = '<i class="bi bi-thermometer-half h4" style = "color:yellow;"></i>'\
         \
        \}if (data[i].priority == 'Low')\{\
          \
          cell4.innerHTML = '<i class="bi bi-thermometer-low h4" style = "color:green;"></i>'\
         \
        \}\
\
\
        if (data[i].completed == 'true' || data[i].completed == 1)\{\
          \
          cell5.innerHTML = '<i "bi bi-check-circle h4" style = "color:green;"></i>'\
         \
        \}\
        else if (data[i].completed == 'false' || data[i].completed == 0)\
        \{\
        cell5.innerHTML = '<i class="bi bi-x-circle h4" style = "color:red" ></i>'\
        \}\
\
        // Insert a link to details\
        const detailsCell = row.insertCell();\
        let btnDetailsnew = document.createElement('button');\
        btnDetailsnew.className='gfgselect bg-secondary'  ;\
        btnDetailsnew.style.backgroundColor = 'transparent';\
        btnDetailsnew.style.color = 'blue';\
        btnDetailsnew.style.borderColor = 'transparent';\
        btnDetailsnew.id = 'btnModal';\
        btnDetailsnew.innerText = 'Details';  \
        btnDetailsnew.onclick = handleButtonClick;\
        detailsCell.appendChild(btnDetailsnew);\
\
        // Insert a edit button \
        const editCell = row.insertCell();\
        let btnEdit = document.createElement('button');\
        btnEdit.className='editClass'  ;\
        btnEdit.style.backgroundColor = 'transparent';\
        btnEdit.style.color = 'blue';\
        btnEdit.style.borderColor = 'transparent';\
        btnEdit.id = 'btnEditId';\
        btnEdit.innerText = 'Edit';  \
        btnEdit.onclick = handleButtonEdit;\
        editCell.appendChild(btnEdit);\
\
      \}     \
    \})\
    \
\}\
\
\
\
      function myFunction() \{\
        const hamburgerMenu = document.querySelector(".hamburger-menu");\
        const nav = document.querySelector(".nav");\
      \
        hamburgerMenu.addEventListener("click", () => \{\
          nav.classList.toggle("active")\
        \});\
      \}\
\
\
      //Function to show detail  list\
\
 function handleButtonClick() \{\
\
 // Accessing row data using the data-* attributes\
  //const deadliname = this.parentNode.parentNode.firstElementChild.innerText;\
  //const deadliname = this.parentNode.parentNode.childNodes.length;\
  \
    var dsc = this.parentNode.parentNode.childNodes[0].innerText;\
    var endl = this.parentNode.parentNode.childNodes[1].innerText;\
    var catgy = this.parentNode.parentNode.childNodes[2].innerText;\
   \
\
  var exampleModal = getExampleModal();\
\
  // Init the modal if it hasn't been already.\
  if (!exampleModal) \{ exampleModal = initExampleModal(); \}\
\
  var html =\
      '<div class="modal-header" style="background-color: black;">' +\
        '<h5 class="modal-title" id="exampleModalLabel" style="color:white;" >Task Details</h5>' +\
        '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +\
          '<span aria-hidden="true">&times;</span>' +\
        '</button>' +\
      '</div>' +\
      '<div class="modal-body" style="background-color:rgb(158, 198, 233);">' +\
      '<ul>'+ '<li> Description: ' + dsc + '</li>' + '</br>' + '<li> Deadline: '+ endl + '</li>' + '</br>' + '<li> Category: '+ catgy + '</li> ' +'</br>' + \
       \
      '</div>' +\
      '<div class="modal-footer" style="background-color:rgb(84, 188, 230);">' +\
        '<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>' +\
      \
      '</div>';\
\
\
  setExampleModalContent(html);\
\
  // Show the modal.\
  jQuery(exampleModal).modal('show');\
\
\}\
\
function getExampleModal() \{\
  return document.getElementById('exampleModal');\
\}\
\
function setExampleModalContent(html) \{\
  getExampleModal().querySelector('.modal-content').innerHTML = html;\
\}\
\
function initExampleModal() \{\
  var modal = document.createElement('div');\
  modal.classList.add('modal', 'fade');\
  modal.setAttribute('id', 'exampleModal');\
  modal.setAttribute('tabindex', '-1');\
  modal.setAttribute('role', 'dialog');\
  modal.setAttribute('aria-labelledby', 'exampleModalLabel');\
  modal.setAttribute('aria-hidden', 'true');\
  modal.innerHTML =\
        '<div class="modal-dialog" role="document">' +\
          '<div class="modal-content"></div>' +\
        '</div>';\
  document.body.appendChild(modal);\
  return modal;\
\}\
       \
\
//function to show status edit details\
\
function handleButtonEdit() \{\
\
\
   \
     var statusStr = this.parentNode.parentNode.childNodes[4].innerText;\
\
    \
 \
   var exampleModal = getExampleModal();\
 \
   // Init the modal if it hasn't been already.\
   if (!exampleModal) \{ exampleModal = initExampleModal(); \}\
 \
   var html =\
       '<div class="modal-header" style="background-color: black;">' +\
         '<h5 class="modal-title" id="exampleModalLabel" style="color:white;" >Task Details</h5>' +\
         '<button type="button" class="close" data-dismiss="modal" aria-label="Close">' +\
           '<span aria-hidden="true">&times;</span>' +\
         '</button>' +\
       '</div>' +\
       '<div class="modal-body" style="background-color:rgb(158, 198, 233);">' +\
       '<ul>'+ '<li> Description: ' + dsc + '</li>' + '</br>' + '<li> Deadline: '+ endl + '</li>' + '</br>' + '<li> Category: '+ catgy + '</li> ' +'</br>' + \
        \
       '</div>' +\
       '<div class="modal-footer" style="background-color:rgb(84, 188, 230);">' +\
         '<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>' +\
       \
       '</div>';\
 \
 \
   setExampleModalContent(html);\
 \
   // Show the modal.\
   jQuery(exampleModal).modal('show');\
 \
 \}\
\
\
AddNewUser.js\
\'97\'97\'97\'97\'97\'97\'97\'97\'97\
let dropdownId = document.getElementById("selectUser");\
let count = 0;\
let datalog = ''\
\
window.onload = function () \{\
\
    myFunction();\
    setTimeout("", 10000)\
    btnAddId = document.getElementById("btnAddnewUser")\
    btnAddId.onclick = AddUserDetails;\
\}\
\
function AddUserDetails() \{\
\
    let newName = document.getElementById("addNewName").value;\
    let newUserName = document.getElementById("AddNewUserName").value;\
    let newPassword = document.getElementById("AddNewUserPassword").value;\
\
    if (newName != '' && newUserName != '' && newPassword != '') \{\
        datalog = \{\
            id: "",\
            name: document.getElementById("addNewName").value,\
            username: document.getElementById("AddNewUserName").value,\
            password: document.getElementById("AddNewUserPassword").value,\
        \}\
          checkUser();\
        if (count != 1) \{\
            let result = btnAddUserClicked(datalog);\
        \} else \{\
            return;\
        \}\
\
    \} else \{\
        alert("One or more fields are empty");\
        return;\
    \}\
\
\
\}\
\
\
function btnAddUserClicked(bodyData) \{\
\
    //check if password and retype passwords are same\
    let passString = document.getElementById("AddNewUserPassword");\
    let checkPassString = document.getElementById("AddNewUserRePassword");\
    if (passString.value != checkPassString.value) \{\
        window.alert("Passwords mismatch!");\
        return;\
    \}\
\
    fetch("http://localhost:8083/api/users/", \{\
  \
            method: "POST",\
            body: JSON.stringify(bodyData),\
            headers: \{\
                "Content-type": "application/json; charset=UTF-8"\
            \}\
        \})\
        .then(response => response.json())\
        .then(json => \{\
            // If the POST finishes successfully, display a message\
            // with the newly assigned id\
            let message = document.getElementById("message");\
            message.innerHTML = ("New User " + bodyData.username + " added successfully!")\
\
        \});\
\}\
\
function myFunction() \{\
    const hamburgerMenu = document.querySelector(".hamburger-menu");\
    const nav = document.querySelector(".nav");\
\
    hamburgerMenu.addEventListener("click", () => \{\
        nav.classList.toggle("active")\
    \});\
\}\
\
async function checkUser() \{\
    let nameString = document.getElementById("addNewName");\
    count = 0;\
 \
    fetch("http://localhost:8083/api/users/")\
    .then(Response => Response.json())\
    .then(data =>\
      \{\
        for(let i=0; i<data.length; i++) \
      \{\
        if (nameString.value == data[i].name)\{\
           alert("User already exists")\
           count = 1;\
           return;\
        \}\
  \
      \}\
  \
     \})\
     return 1;\
    \
\}\
\
\
\
AddTodo.js\
\'97\'97\'97\'97\'97\'97\'97\
let dropdownId = document.getElementById("selectUser");\
\
\
\
window.onload = function () \{\
    myFunction();\
    setTimeout("",10000)\
    initTodoDropdown();\
\
     btnAddId = document.getElementById("btnAddnew")\
       btnAddId.onclick = AddDetails;\
\}\
\
function initTodoDropdown() \{\
      \
    fetch("http://localhost:8083/api/users/")\
    .then(Response => Response.json())\
    .then(data =>\
      \{\
        for(let i=0; i<data.length; i++) \
      \{\
          //populate the dropdown with valid name\
          let theOption = new Option(data[i].name, data[i].id); \
       \
          // append the option as a child of (inside) the select element\
          dropdownId.appendChild(theOption);\
  \
      \}\
  \
     \})\
     return 1;\
  \}\
  \
\
function AddDetails()\{\
 \
\
    //collect all the dat from the form\
    let selectID = dropdownId.value;\
    let priorityID = document.querySelector('input[name="priority_set"]:checked') \
\
    let datalog = \{\
        id: "",\
        userid : selectID,\
        category : document.getElementById("category").value,\
        description :document.getElementById("description").value,\
        deadline : document.getElementById("deadline").value,\
       \
        priority :priorityID.value,\
        \
        completed : ""\
    \}\
    let result = btnAddClicked(datalog);\
    console.log(result);\
\}\
\
function btnAddClicked(bodyData) \{\
\
    //get the name from the select box and its id \
   \
    let dropdownId = document.getElementById("selectUser");\
    let selectName = dropdownId.name;\
\
    // fetch student #1 (hard-coded) to be updated\
   \
      fetch("http://localhost:8083/api/todos/", \{\
            method: "POST",\
            body: JSON.stringify(bodyData),\
            headers: \{\
                "Content-type": "application/json; charset=UTF-8"\
            \}\
        \})\
        .then(response => response.json())\
        .then(json => \{\
            // If the POST finishes successfully, display a message\
            // with the newly assigned id\
            let message = "Tasks to user id: " + dropdownId.value + " is added successfully";\
            \
            let messageid = document.getElementById("message");\
            messageid.innerHTML = message;\
        \});\
\}\
\
function myFunction()\
\{\
    const hamburgerMenu = document.querySelector(".hamburger-menu");\
            const nav = document.querySelector(".nav");\
\
            hamburgerMenu.addEventListener("click", () => \{\
                nav.classList.toggle("active")\
            \});\
            \
\}\
\
\
\
Delete.js\
\'97\'97\'97\'97\'97-\
\
let ret = CheckUser();\
\
DeleteData();\
\
function DeleteData()\{\
    fetch("http://localhost:8083/api/users/9",\
    \{\
      method: "DELETE"\
   \})\
   .then(response => response.text()) // or res.json()\
   .then(response => \{\
   \
   \})\
    \
\
\}\
function CheckUser() \{\
      \
\
   // check if the user is already present \
   fetch("http://localhost:8083/api/users/")\
   .then(Response => Response.json())\
   .then(data =>\
     \{\
       for(let i=0; i<data.length; i++) \
     \{\
        \
      console.log(data[i].name)\
 \
     \}\
 \
    \})\
    \}\
 \
\
Style.css\
\'97\'97\'97\'97\'97\'97\
*\{\
    margin:0;\
    padding: 0;\
    font-family:Verdana, Geneva, Tahoma, sans-serif;\
    box-sizing: border-box;\
\}\
.container\{\
    width: 80%;\
    background-image: url('./Images/Stepup_new.png');\
    background-position: center;\
    background-repeat: no-repeat;\
    background-size: cover;\
    margin-top: 9%;\
    margin-left: 3%;\
    justify-content: space-evenly;\
\}\
input\{\
  justify-content: left;\
  size: 20px;\
  height: 25Px;\
 \
\}\
.to-do-list\{\
    width: 80%;\
    max-width: 540px;\
    padding: 40px 30px 70px;\
    background-color: rgb(162, 113, 215);\
    margin: 100px auto 20px;\
    border-radius: 10px;\
    margin-left: 3%;\
    text-align: center;\
    color: #050003;\
    font-size: medium;\
    font-style: oblique;\
    justify-content: space-evenly;\
\
\}\
.to-do-list h4\{\
    color: rgb(234, 166, 132);\
    align-items: center;\
    margin-bottom: -0px;\
\}\
.to-do-list h4 img\{\
    width: 5%;\
    height: 5%;\
    margin-left: 10px;\
\
\}\
\
.row\
\{\
    display: flex;\
    align-items: center;\
    justify-content: space-between;\
    background: rgb(128, 33, 141);\
    border-radius: 30px;\
    padding-left: 30px;\
    margin-bottom: 25px;\
\}\
select\{\
    flex: .70;\
    outline: none;\
    background: rgb(237, 143, 143);\
    padding: 10px;\
    margin-left: 0%;\
    margin-right: -10%;\
    font-weight: 50px;\
    font-size: medium;\
    border-radius: 30px;\
    padding-left: 20px;\
    padding-left: 0px;\
    font-family: Verdana, Geneva, Tahoma, sans-serif;\
    align-items: center;\
\}\
\
/*\
.blockHead:after \{\
    color:#905f8d;\
    border-left: 20px solid;\
    border-top: 20px solid transparent;\
    border-bottom: 20px solid transparent;\
    display: inline-block;\
    content: '';\
    position: absolute;\
    right: -20px;\
    height: 59px;\
  \}*/\
  \
  .blockHead \{\
    background-color:#8d84ee;\
    width: 100%; \
    flex : 1;\
    height: 250px;\
    /*display: inline-block;*/\
    /*position: relative;*/\
    padding: 5%;\
    justify-content: space-evenly;\
    height: fit-content;\
  \}\
\
  .blocktext\{\
      color:white;\
      font-weight:bold;\
      padding-left:10px;\
      font-family:Arial;\
      font-size:18;\
      align-items: center;\
      \
  \}\
  /*\
  #btnDetails\{\
    border-radius: 10%;\
    border-color: #ac5886;\
    color: #905f8d;\
    font-size: 16;\
    margin-left: 40%;\
    margin-right: 50%;\
    margin-bottom: 5%;\
  \}*/\
\
  .priority\{\
    align-items: center;\
    text-align: center;\
    padding-right: 15%;\
    padding: 3%;\
    justify-content: space-around;\
\
  \}\
  .images\{\
    padding-left: 3%;\
    border-radius: 40%;\
  \}\
\
  .body\{\
    background-image : url('//Images/Stepup.png');\
  \}\
\
\
\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
 /* \cf4 <script\cf2  \cf6 src\cf2 =\cf7 "scripts/susertodos.js"\cf2  \cf6 defer\cf4 ></script>\cf2  */\
\
\
\
\
\pard\pardeftab720\partightenfactor0
\cf8 \cb3 \outl0\strokewidth0 \strokec8 bi-calendar-heart\cf9 \cb1 \strokec9 \
\pard\pardeftab720\partightenfactor0
\cf2 \outl0\strokewidth0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \
}